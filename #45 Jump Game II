func jump(nums []int) int {
	storage := make([]int, len(nums))
	for i, s := range nums {
		for k := 1; k <= s && i+k < len(nums); k++ {
			if storage[i+k] == 0 || storage[i+k] > storage[i]+1 {
				storage[i+k] = storage[i] + 1
			}
		}
	}
	return storage[len(nums)-1]
}

func jump(nums []int) int {
    if len(nums) == 1 {
        return 0
    }
    for i := 0; i < len(nums); i++ {
        if nums[i] + i >= len(nums)-1 {
            return jump(nums[:i+1]) + 1
        }
    }
    return len(nums) - 1
}
