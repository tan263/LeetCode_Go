func insert(intervals [][]int, newInterval []int) [][]int {
	l := len(intervals)
	if l == 0{
		return append(intervals, newInterval)
	}
	for i := 0; i < l; {
		if newInterval[0] < intervals[i][0]{
			if newInterval[1] < intervals[i][0] {
				intervals = append(intervals[:i+1], intervals[i:]...)
				intervals[i] = newInterval
				return intervals
			}else if newInterval[1] == intervals[i][0] {
				intervals[i][0] = newInterval[0]
				return intervals
			}else {
				intervals[i][0] = newInterval[0]
				newInterval[0] = intervals[i][1]
				continue
			}

		}
		if newInterval[0] == intervals[i][0]{
			if newInterval[1] <= intervals[i][1] {
				return intervals
			} else {
				intervals = append(intervals[:i], intervals[i+1:]...)
				l --
				continue
			}
		}
		if newInterval[0] > intervals[i][0]{
			if newInterval[1] <= intervals[i][1] {
				return intervals
			} else {
				if newInterval[0] < intervals[i][1]{
					newInterval[0] = intervals[i][0]
					continue
				}else if newInterval[0] == intervals[i][1]{
					newInterval[0] = intervals[i][0]
					intervals = append(intervals[:i], intervals[i+1:]...)
					l--
					continue
				}
			}
		}
		i++
	}
	return append(intervals, newInterval)
}
