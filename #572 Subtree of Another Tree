/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func isSubtree(root *TreeNode, subRoot *TreeNode) bool {
    if subRoot == nil{
        return true
    }
    if root == nil && subRoot != nil {
        return false
    }
    
    if root.Val == subRoot.Val {
        if sameTree(root.Left, subRoot.Left) && sameTree(root.Right, subRoot.Right) {return true}
    }
    if isSubtree(root.Left, subRoot) {return true}
    if isSubtree(root.Right, subRoot) {return true}
    return false
}

func sameTree(root *TreeNode, subRoot *TreeNode) bool {
    if root == nil && subRoot == nil {
        return true
    }
    if (root != nil && subRoot == nil) || (root == nil && subRoot != nil) {
        return false
    }
    if root.Val != subRoot.Val {
        return false
    }
    return sameTree(root.Left, subRoot.Left) && sameTree(root.Right, subRoot.Right)
}
